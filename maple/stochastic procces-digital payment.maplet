# Inisiasi
# 
NULL;
restart; with(linalg); with(plots); with(Maplets[Elements]); with(Maplets[Tools]);
T := Matrix(5, 5, [21/29, 2/29, 3/29, 1/29, 2/29, 2/27, 21*(1/27), 3*(1/27), 1/27, 0*(1/27), 2/9, 3*(1/9), 4/9, 0*(1/9), 0*(1/9), 1/5, 2/5, 0*(1/5), 2/5, 0*(1/5), 0*(1/3), 0*(1/3), 1/3, 0*(1/3), 2/3]);
p0 := Matrix(1, 5, [a, b, c, d, e]);
# 
# Vektor n langkah
evalf(seq(T^2, k = 1 .. 10));

a, b, c, d, e := 29, 27, 9, 5, 3; t := 100;
f := proc (x) options operator, arrow; evalf(multiply(p0, T^x)) end proc; for i from 0 to t do p[i] := f(i) end do;
Matrix(p[0]); Matrix(p[1]); Matrix(p[12]); Matrix(p[t]);
# 
# Steady State
hasil := 0; for i to 30 do if Matrix(T^i)[1, 1] > 0 then hasil := hasil, i end if end do; if igcd(hasil) = 1 then "Rantai Markov Ergodik" else "Rantai Markov tidak Ergodik" end if;
# 
ps := Matrix(1, 5, [seq(lambda[i], i = 1 .. 5)]);
psT := multiply(ps, T);
sol := solve({seq(lambda[i] = psT[1, i], i = 1 .. 5), add(lambda[i], i = 1 .. 5) = 73}); assign(sol);
seq(floor(lambda[k]), k = 1 .. 5);
# Plot populasi
# 
g[1] := pointplot({seq([T, p[T][1, 1]], T = 0 .. t)}, connect = true, legend = Ovo, color = red); g[2] := pointplot({seq([T, p[T][1, 2]], T = 0 .. t)}, connect = true, legend = GoPay, color = green); g[3] := pointplot({seq([T, p[T][1, 3]], T = 0 .. t)}, connect = true, legend = Dana, color = blue); g[4] := pointplot({seq([T, p[T][1, 4]], T = 0 .. t)}, connect = true, legend = LinkAja, color = yellow); g[5] := pointplot({seq([T, p[T][1, 5]], T = 0 .. t)}, connect = true, legend = Lainnya, color = black); g0 := display(plot(0, color = white));
display(seq(g[z], z = 1 .. 5), title = Grafik*Perpindahan*Penggunaan*Pembayaran*Digital, titlefont = ["ROMAN", 13], labels = ["Periode (bulan)", "banyak pengguna (orang)"], labelfont = ["HELVETICA", 10], labeldirections = ["horizontal", "vertical"], axesfont = ["HELVETICA", "ROMAN", 8], legendstyle = [font = ["HELVETICA", 9], location = right], axes = boxed, thickness = 2);
seq(p[t][1, g], g = 1 .. 5); seq(floor(p[t][1, g]), g = 1 .. 5);
# Maplet
restart; with(linalg); with(plots); with(Maplets[Elements]); with(Maplets[Tools]);
sim := proc () local p0, Tr, f, i, g, t, temp; global w, grafik, pnol, g0, p, fp; t[1, 1] := Get('tp11'::numeric); t[1, 2] := Get('tp12'::numeric); t[1, 3] := Get('tp13'::numeric); t[1, 4] := Get('tp14'::numeric); t[1, 5] := Get('tp15'::numeric); t[2, 1] := Get('tp21'::numeric); t[2, 2] := Get('tp22'::numeric); t[2, 3] := Get('tp23'::numeric); t[2, 4] := Get('tp24'::numeric); t[2, 5] := Get('tp25'::numeric); t[3, 1] := Get('tp31'::numeric); t[3, 2] := Get('tp32'::numeric); t[3, 3] := Get('tp33'::numeric); t[3, 4] := Get('tp34'::numeric); t[3, 5] := Get('tp35'::numeric); t[4, 1] := Get('tp41'::numeric); t[4, 2] := Get('tp42'::numeric); t[4, 3] := Get('tp43'::numeric); t[4, 4] := Get('tp44'::numeric); t[4, 5] := Get('tp45'::numeric); t[5, 1] := Get('tp51'::numeric); t[5, 2] := Get('tp52'::numeric); t[5, 3] := Get('tp53'::numeric); t[5, 4] := Get('tp54'::numeric); t[5, 5] := Get('tp55'::numeric); w := Get('waktu'::numeric); p0[1] := Get('ta'::numeric); p0[2] := Get('tb'::numeric); p0[3] := Get('tc'::numeric); p0[4] := Get('td'::numeric); p0[5] := Get('te'::numeric); Tr := Matrix(5, 5, [seq(seq(t[i, j], j = 1 .. 5), i = 1 .. 5)]); pnol := Matrix(1, 5, [seq(p0[m], m = 1 .. 5)]); f := proc (x) options operator, arrow; evalf(multiply(pnol, Tr^x)) end proc; for i from 0 to w do p[i] := f(i) end do; for i to 5 do fp[i] := floor(f(100)[1, i]) end do; g[1] := pointplot({seq([T, p[T][1, 1]], T = 0 .. w)}, connect = true, legend = Ovo, color = red); g[2] := pointplot({seq([T, p[T][1, 2]], T = 0 .. w)}, connect = true, legend = GoPay, color = green); g[3] := pointplot({seq([T, p[T][1, 3]], T = 0 .. w)}, connect = true, legend = Dana, color = blue); g[4] := pointplot({seq([T, p[T][1, 4]], T = 0 .. w)}, connect = true, legend = LinkAja, color = yellow); g[5] := pointplot({seq([T, p[T][1, 5]], T = 0 .. w)}, connect = true, legend = Lainnya, color = black); g0 := display(plot(0, color = white)); grafik := display(seq(g[z], z = 1 .. 5), title = Grafik*Perpindahan*Penggunaan*Pembayaran*Digital, titlefont = ["ROMAN", 13], labels = ["Periode (bulan)", "banyak pengguna (orang)"], labelfont = ["HELVETICA", 10], labeldirections = ["horizontal", "vertical"], axesfont = ["HELVETICA", "ROMAN", 8], legendstyle = [font = ["HELVETICA", 9], location = right], axes = boxed, thickness = 2); temp := 0; for i to 30 do if 0 < Matrix(Tr^i)[1, 1] then temp := temp, i end if end do; if igcd(temp) = 1 then "Rantai Markov Ergodik" else for i to 5 do fp[i] := "-" end do; "Rantai Markov tidak Ergodik (Periodic)" end if end proc;


digipay := Maplet('onstartup' = 'A1', Window['w1']('title' = "Program Prediksi Penggunaan Pembayaran Digital", [[TextField("Prediksi Transisi Pengguna Pembayaran Digital ", 30, editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12))], ["Oleh:"], ["1. [140110160048] Wahyu Suryaningrat"], ["2. [140110170022] Merliana Virna Malihah"], ["3. [140110170097] Nur Hafizhah"], ["Jurusan Matematika - Fakultas Matematika dan Ilmu Pengetahuan Alam - Universitas Padjadjaran"], [Button("Gunakan Program", Action(CloseWindow('w1'), RunWindow('w2'), CloseWindow('w3')))]]), Window['w2']('title' = "Petunjuk Penggunaan Program", [[TextField("Petunjuk Penggunaan Program", editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12))], ["1. Program ini dapat menampilkan grafik pengguna pembayaran digital Ovo, GoPay, Dana, LinkAja, dan merk lainnya ."], ["2. Masukkan nilai-nilai parameter matriks transisi"], ["3. Masukkan rentang waktu pengamatan"], ["4. Pilih  <default> jika menggunakan parameter yang merujuk literatur"], ["5. Klik tombol Simulasi"], [""], [TextField("Keterangan", editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12)), 'halign' = 'center', 'font' = Font("helvetica", bold, 12)], ["Model dan nilai parameter merujuk paper kami yang berjudul : "], ["Prediksi Transisi Penggunaan Pembayaran Digital dengan Pendekatan Rantai Markov Menuju Pembangunan Ekonomi Indonesia Berkelanjutan"], [Button("Lanjut", Action(CloseWindow('w1'), CloseWindow('w2'), RunWindow('w3')))]]), Window['w3']('title' = "Simulasi Prediksi Perpindahan Penggunaan Pembayaran Digital", [[[TextField("Input Data ", 30, editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12)), "Matriks Peluang Transisi", ["Ovo      ", TextField['tp11'](5), TextField['tp12'](5), TextField['tp13'](5), TextField['tp14'](5), TextField['tp15'](5)], ["GoPay   ", TextField['tp21'](5), TextField['tp22'](5), TextField['tp23'](5), TextField['tp24'](5), TextField['tp25'](5)], ["Dana     ", TextField['tp31'](5), TextField['tp32'](5), TextField['tp33'](5), TextField['tp34'](5), TextField['tp35'](5)], ["LinkAja  ", TextField['tp41'](5), TextField['tp42'](5), TextField['tp43'](5), TextField['tp44'](5), TextField['tp45'](5)], ["Lainnya ", TextField['tp51'](5), TextField['tp52'](5), TextField['tp53'](5), TextField['tp54'](5), TextField['tp55'](5)], "Kondisi Awal Pengguna", [[Ovo, TextField[ta](5)], [GoPay, TextField[tb](5)], [Dana, TextField[tc](5)], [LinkAja, TextField[td](5)], [Lainnya, TextField[te](5)]], ["Rentang Waktu Pengamatan :", TextField[waktu](10), "bulan"], [Button("Default", Action(SetOption('cek' = "Parameter merujuk paper"), SetOption('tp11' = 21/29), SetOption('tp12' = 2/29), SetOption('tp13' = 3/29), SetOption('tp14' = 1/29), SetOption('tp15' = 2/29), SetOption('tp21' = 2/27), SetOption('tp22' = 7/9), SetOption('tp23' = 1/9), SetOption('tp24' = 1/27), SetOption('tp25' = 0), SetOption('tp31' = 2/9), SetOption('tp32' = 1/3), SetOption('tp33' = 4/9), SetOption('tp34' = 0), SetOption('tp35' = 0), SetOption('tp41' = 1/5), SetOption('tp42' = 2/5), SetOption('tp43' = 0), SetOption('tp44' = 2/5), SetOption('tp45' = 0), SetOption('tp51' = 0), SetOption('tp52' = 0), SetOption('tp53' = 1/3), SetOption('tp54' = 0), SetOption('tp55' = 2/3), SetOption('ta' = 29), SetOption('tb' = 27), SetOption('tc' = 9), SetOption('td' = 5), SetOption('te' = 3), SetOption('waktu' = 24))), Button("Bersihkan", Action(SetOption(cek = "Clear"), Evaluate(pl1 = g0), SetOption('tp11' = ""), SetOption('tp12' = ""), SetOption('tp13' = ""), SetOption('tp14' = ""), SetOption('tp15' = ""), SetOption('tp21' = ""), SetOption('tp22' = ""), SetOption('tp23' = ""), SetOption('tp24' = ""), SetOption('tp25' = ""), SetOption('tp31' = ""), SetOption('tp32' = ""), SetOption('tp33' = ""), SetOption('tp34' = ""), SetOption('tp35' = ""), SetOption('tp41' = ""), SetOption('tp42' = ""), SetOption('tp43' = ""), SetOption('tp44' = ""), SetOption('tp45' = ""), SetOption('tp51' = ""), SetOption('tp52' = ""), SetOption('tp53' = ""), SetOption('tp54' = ""), SetOption('tp55' = ""), SetOption('ta' = ""), SetOption('tb' = ""), SetOption('tc' = ""), SetOption('td' = ""), SetOption('te' = ""), SetOption('waktu' = ""), SetOption(h1 = ""), SetOption(h2 = ""), SetOption(h3 = ""), SetOption(h4 = ""), SetOption(h5 = ""))), Button("Simulasi", Action(Evaluate('cek' = 'sim'), Evaluate(pl1 = grafik), Evaluate(h1 = fp[1]), Evaluate(h2 = fp[2]), Evaluate(h3 = fp[3]), Evaluate(h4 = fp[4]), Evaluate(h5 = fp[5]))), Button("Keluar", Shutdown(pl1))], TextBox['cek']("Siap untuk digunakan~", 'editable' = false, 1 .. 35), [TextField("Dibuat oleh: ", 30, editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12))], ["1. [140110160048] Wahyu Suryaningrat"], ["2. [140110170022] Merliana Virna Malihah"], ["3. [140110170097] Nur Hafizhah"], ["Jurusan Matematika - Fakultas Matematika dan Ilmu Pengetahuan Alam "], ["Universitas Padjadjaran"]], [Plotter['pl1'](g0, continuous = false, height = 500, width = 600), [[TextField("Kondisi Steady-State ", 30, editable = false, background = cecdcd, 'halign' = 'center', 'font' = Font("helvetica", bold, 12)), [[Ovo, TextBox['h1']("", 'editable' = false, 1 .. 5)], [GoPay, TextBox['h2']("", 'editable' = false, 1 .. 5)], [LinkAja, TextBox['h3']("grafik", 'editable' = false, 1 .. 5)], [Dana, TextBox['h4']("", 'editable' = false, 1 .. 5)], [Lainnya, TextBox['h5']("", 'editable' = false, 1 .. 5)]]]]]]]), Action['A1'](RunWindow('w1')), ButtonGroup['BG1']());
Maplets[Display](digipay);


# 
